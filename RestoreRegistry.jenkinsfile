import groovy.transform.Field

@Library('jenkins-sharedlibs')_

@Field String STATUS_MNT = './status.nagios.groovy'
@Field String ROOT = 'root'
@Field String USER = 'bobb'

pipeline {
    agent { label 's2.ubuntu.home' }
    options {
        buildDiscarder(logRotator(numToKeepStr: '20'))
        disableConcurrentBuilds()
        disableResume()
        timestamps()
    }
    parameters {
        string(name: 'SOURCE', defaultValue: '/mnt/Registry', description: 'remote destination for backup')
        string(name: 'DESTINATION', defaultValue: '/var/lib/docker-registry/docker/registry/v2/', description: 'source directory do backup')
    }
    stages {
        stage ('Check mount') {
            steps {
                sh returnStatus: true, script: "./checkMounted.sh $STATUS_MNT " + params.DESTINATION
                loadIfExists STATUS_MNT
            }
        }
        stage ('Restore Registry') {
            steps {
                sh """
                      sudo systemctl stop docker-registry
#                      sudo rm -rf '${params.DESTINATION}'
                      sudo -u docker-registry rsync --checksum            \
                                                    --delete              \
                                                    --devices             \
                                                    --executability       \
                                                    --force               \
                                                    --no-group            \
                                                    --no-owner            \
                                                    --prune-empty-dirs    \
                                                    --recursive           \
                                                    --safe-links          \
                                                    --specials            \
                                                    --stats               \
                                                    --times               \
                                                    --verbose             \
                                                    '${params.SOURCE}' '${params.DESTINATION}'
#                      sudo chown -R docker-registry:docker-registry '${params.DESTINATION}'
                      sudo systemctl start docker-registry
                     """
                archiveArtifacts artifacts: 'rsync.log'
            }
        }
    }
    post() {
        always {
            kafkaBuildReporter()
        }
        cleanup {
            deleteDir()
        }
	}
}
