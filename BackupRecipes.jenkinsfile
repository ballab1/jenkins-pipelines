@Library('jenkins-sharedlibs')_

pipeline {
    agent { label 'ubuntu-s3' }
    options {
        buildDiscarder(logRotator(numToKeepStr: '20'))
        disableConcurrentBuilds()
        disableResume()
        timestamps()
    }
    stages {
        stage ('Check mount') {
            steps {
                sh returnStatus: true, script: "./checkMounted.sh /mnt/Registry"
                script {
                    if (fileExists('./status.groovy')) {
                        load './status.groovy'
                    } 
                } 
            }
        }
        stage ('Backup Recipes') {
            steps {
                sh "cd /home/bobb/production/workspace.production/www/recipes; tar czf '${WORKSPACE}/recipes.tgz' * ||:"
                sh "./backup.sh '${WORKSPACE}/recipes.tgz'"
                script {
                    if (fileExists('./status.groovy')) {
                        load './status.groovy'
                    } 
                }
                archiveArtifacts 'recipes.tgz'
           }
        }
        stage ('Backup Versions') {
            steps {
                sh "cd /home/bobb/production/workspace.production/www/versions; tar czf '${WORKSPACE}/versions.tgz' * ||:"
                sh "./backup.sh '${WORKSPACE}/versions.tgz'"
                script {
                    if (fileExists('./status.groovy')) {
                        load './status.groovy'
                    } 
                }
                archiveArtifacts 'versions.tgz'
           }
        }
    }
}
