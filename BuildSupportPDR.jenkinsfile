timestamps {

    def BRANCH='dev'
    println "checking out ${BRANCH}"

    node('ubuntu-s4') {
        stage('Prepare Workspace') {

            deleteDir()
            
            // make sure 'cwd' is empty so we can run 'git clone' into workspace
            checkout([$class: 'GitSCM',
                      branches: [[name: "*/${BRANCH}"]], 
                                  doGenerateSubmoduleConfigurations: false, 
                                  extensions: [[$class: 'LocalBranch', localBranch: "${BRANCH}"],
                                               [$class: 'GitLFSPull'], 
                                               [$class: 'SubmoduleOption', 
                                                disableSubmodules: false, 
                                                parentCredentials: true, 
                                                recursiveSubmodules: true, 
                                                reference: '', 
                                                trackingSubmodules: true]
                                               ],
                                  submoduleCfg: [],
                                  userRemoteConfigs: [[credentialsId: '935a7b57-da74-45f7-9119-5a0529afb8ae',
                                                       url: 'https://github.com/ballab1/support']
                                                     ]
                    ])
        }    
        stage('Build') {
            try {
                def vars = ''
                if ( Always_Build == 'true' ) { vars += ' --force' }
                if ( Always_Push == 'true' ) { vars += ' --push' }
                dir('logs') {
                    deleteDir()
                }
                ansiColor('xterm') {
                    sh """git checkout ${BRANCH}
                          ./build.sh ${vars}
                       """
                }
            }
            finally {
                archiveArtifacts allowEmptyArchive: true, artifacts: 'logs/*'
            }
        }
    }
}