pipeline {
    agent { label 'docker-host' }
    options {
        buildDiscarder(logRotator(numToKeepStr: '20'))
        disableConcurrentBuilds()
        disableResume()
        timestamps()
    }
    stages {
        stage('Generate JSON') {
            agent {
                docker {
                    image 'ubuntu-s2:5000/alpine/build_container:latest'
                    label 'docker-host'
                    args '--add-host="ubuntu-s2:10.1.3.12" --entrypoint=""'
                    registryUrl 'http://ubuntu-s2:5000/'
                }
            }
            steps {
                checkout scm
                ansiColor('xterm') {
                    sh 'bin/docker-utilities report --format json --output registryContents.json'
                }
                stash includes: 'registryContents.json', name: 'json'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'registryContents.json'
            }
        }
        stage('Generate Report') {
            agent {
                docker {
                    image 'ubuntu-s2:5000/thirdparty/groovy:2.6-jre'
                    label 'docker-host'
                    args "-v '${WORKSPACE}/bin:/home/groovy/scripts'"
                    registryUrl 'http://ubuntu-s2:5000/'
                }
            }
            steps {
                unstash 'json'
                sh 'JSON="${WORKSPACE}/registryContents.json" groovy registryReport.groovy'
                archiveArtifacts allowEmptyArchive: true, artifacts: 'bin/registryReport.txt'
                sh 'rm bin/registryReport.txt registryContents.json'
            }
        }
    }
}
