import groovy.transform.Field

@Library('jenkins-sharedlibs')_

// Initialize here so it is still available in post block if build fails.
@Field String WWW = '/home/bobb/production/workspace.production/www/'
@Field String STATUS_FILE = './status.postgres.groovy'


pipeline {
    agent { label 's3.ubuntu.home' }
    options {
        buildDiscarder(logRotator(numToKeepStr: '20'))
        disableConcurrentBuilds()
        disableResume()
        timestamps()
    }
    stages {
        stage ('workers') {
            parallel {
                stage ('Backup postgres') {
                    agent { label 's6.ubuntu.home' }
                    steps {
                        sh "MAX_FILES=20 ./backup.sh $STATUS_FILE 'postgres' 'svc/postgres' "
                        archiveArtifacts allowEmptyArchive: true, artifacts: 'postgres*'
                        loadIfExists STATUS_FILE
                   }
                }
            }
        }
    }
    post {
        always {
            kafkaBuildReporter()
        }
//        cleanup {
//            deleteDir()
//        }
    }
}
