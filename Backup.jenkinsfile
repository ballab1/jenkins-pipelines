
@Library('jenkins-sharedlibs')
import org.ballab1.pipeline.Helper

import ie.googlielmo.publishtokafka.PublishToKafkaBuilder

ArrayList<String> nodes = ['ubuntu-s1', 'ubuntu-s2', 'ubuntu-s3', 'ubuntu-s4']
def stepsForParallel = [:]

def transformIntoStep(String nodeName, Closure body) {
  return {
    node(nodeName) {
      timestamps {
        ws {
          checkout scm
          body(nodeName)
        }
      }
    }
  }
}

def tarFiles = { nodeName ->
  sh "tar -cvzf ${nodeName}.cfg.tar.gz ./tarfiles.lst || true"
  archiveArtifacts "${nodeName}.cfg.tar.gz"
}

/////////////////////////////////////////////////////////////////////////////////////////////////

stage ('Prepare') {
  node('master') {
    nodes.each { nodeName ->
      // Into each branch we put the pipeline code we want to execute
      stepsForParallel[nodeName] = transformIntoStep(nodeName, tarFiles)
    }
  }
}

stage ('Perform Update') {
  parallel stepsForParallel
  failFast: true
}

stage ('Report Metrics') {
  node('master') {
    new PublishToKafkaBuilder('10.1.3.6:9092,10.1.3.10:9092,10.1.3.11:9092',
                              '10.1.3.6:9092,10.1.3.10:9092,10.1.3.11:9092',
                              '1', 'jenkins_data', true, true, 0, '', 0, 0, 0, 0, 0, true)
//             excludePlugin: false,
//             changeBuildStatus: false
//	           ])
//    new PublishToKafkaBuilder([
//             bootstrapServers: '10.1.3.6:9092,10.1.3.10:9092,10.1.3.11:9092',
//             metadataBrokerList: '10.1.3.6:9092,10.1.3.10:9092,10.1.3.11:9092',
//             acks: '1',
//             topic: 'jenkins_data'
//             excludePlugin: false,
//             changeBuildStatus: false
//           ])

  }
}
