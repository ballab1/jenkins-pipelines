import groovy.transform.Field

@Library('jenkins-sharedlibs')_

// Initialize here so it is still available in post block if build fails.
@Field String SUMMARY = 'summary.log'


/////////////////////////////////////////////////////////////////////////////////////////////////

pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '20'))
    disableConcurrentBuilds()
    disableResume()
    timestamps()
  }

  stages {
    stage ('Curation') {
      agent { label 'docker' }
      steps {
        ansiColor('xterm') {
          dir(WORKSPACE) {
            sh './clean-docker-registry.sh currate_images'
            archiveArtifacts allowEmptyArchive: true, artifacts: 'debug.log'
          }
        }
      }
    }
    stage ('Garbage Collection') {
      agent { label 'ubuntu-s2' }
      steps {
        ansiColor('xterm') {
          dir(WORKSPACE) {
            sh './clean-docker-registry.sh run_garbage_collection ' + SUMMARY
            loadIfExists './status.groovy'
            archiveArtifacts allowEmptyArchive: true, artifacts: SUMMARY
          }
        }
      }
    }
  }
  post {
    always {
        kafkaBuildReporter()
    }
    cleanup {
        deleteDir()
    }
  }
}
