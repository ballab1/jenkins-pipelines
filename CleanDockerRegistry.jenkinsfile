import groovy.transform.Field

@Library('jenkins-sharedlibs')_

// Initialize here so it is still available in post block if build fails.
@Field String SUMMARY = 'summary.log'
@Field String STATUS_CURATION = './status.curation.groovy'
@Field String STATUS_GARBAGE = './status.garbage.groovy'

/////////////////////////////////////////////////////////////////////////////////////////////////

pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '20'))
    disableConcurrentBuilds()
    disableResume()
    timestamps()
  }

  stages {
    stage ('Curation') {
      agent { label 'docker' }
      steps {
        ansiColor('xterm') {
          dir(WORKSPACE) {
            sh "./clean-docker-registry.sh currate_images ${STATUS_CURATION} garbage_collection.log"
            loadIfExists STATUS_CURATION
          }
        }
      }
    }
    stage ('Garbage Collection') {
      agent { label 's2.ubuntu.home' }
      steps {
        ansiColor('xterm') {
          dir(WORKSPACE) {
            sh "./clean-docker-registry.sh run_garbage_collection ${STATUS_GARBAGE} summary.log ${SUMMARY}"
            loadIfExists STATUS_GARBAGE
            archiveArtifacts allowEmptyArchive: true, artifacts: '*.log'
          }
        }
      }
    }
  }
  post {
    always {
        kafkaBuildReporter()
    }
    cleanup {
        deleteDir()
    }
  }
}
