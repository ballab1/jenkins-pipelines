@Library('jenkins-sharedlibs')_

/////////////////////////////////////////////////////////////////////////////////////////////////

pipeline {
  agent any
  options {
    buildDiscarder(logRotator(numToKeepStr: '20'))
    disableConcurrentBuilds()
    disableResume()
    timestamps()
  }
  parameters {
    string(name: 'CONTAINER_TAG', defaultValue: 'dev', description: 'version of kafka containers to use')
    string(name: 'TARGET_DIR', defaultValue: '/home/bobb/kafka-deploy', description: 'target directory for config files')   }

  stages {
    stage ('stop all') {
      failFast true
      parallel {
        stage ('ubuntu-s3') {
          agent { label 'ubuntu-s3' }
          steps {
            dir(params.TARGET_DIR){
              sh './bin/updateBin.sh'
              sh './deploy --down'
            }
          }
        }
        stage ('ubuntu-s4') {
          agent { label 'ubuntu-s4' }
          steps {
            dir(params.TARGET_DIR){
              sh './bin/updateBin.sh'
              sh './deploy --down'
            }
          }
        }
        stage ('ubuntu-s6') {
          agent { label 'ubuntu-s6' }
          steps {
            dir(params.TARGET_DIR){
              sh './bin/updateBin.sh'
              sh './deploy --down'
            }
          }
        }
      }
    }
    stage ('ubuntu-s3') {
      agent { label 'ubuntu-s3' }
      steps {
        dir(params.TARGET_DIR){
          sh './bin/updateBin.sh'
          sh './deploy --latest --tag ' + params.CONTAINER_TAG
        }
      }
    }
    stage ('ubuntu-s4') {
      agent { label 'ubuntu-s4' }
      steps {
        dir(params.TARGET_DIR){
          sh './bin/updateBin.sh'
          sh './deploy --latest --tag ' + params.CONTAINER_TAG
        }
      }
    }
    stage ('ubuntu-s6') {
      agent { label 'ubuntu-s6' }
      steps {
        dir(params.TARGET_DIR){
          sh './bin/updateBin.sh'
          sh './deploy --latest --tag ' + params.CONTAINER_TAG
        }
      }
    }
  }
  post {
    always {
        kafkaBuildReporter()
    }
    cleanup {
        deleteDir()
    }
  }
}